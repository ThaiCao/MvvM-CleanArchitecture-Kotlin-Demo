
plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-kapt")
    id("kotlin-parcelize")
//    id(Plugins.kotlinAndroid)
//    id(Plugins.kotlinKapt)
//    id(Plugins.kotlin_parcelize)
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.example.mydemo"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    implementation(project(Modules.data))
    implementation(project(Modules.domain))
    implementation(project(Modules.presentation))
    implementation(project(Modules.local))
    implementation(project(Modules.remote))
//    implementation(project(Modules.analytics))
//    implementation(project(Modules.notifications))

    implementation(Di.core)
    implementation(Di.koin)
    implementation(Di.koinCompat)
    implementation(Di.koinWorkmanager)
   // implementation(Di.koinNavigation)

    implementation(Coroutines.coroutines)

    implementation(AndroidX.recyclerview)
    implementation(AndroidX.multidex)
    implementation(AndroidX.design)
    implementation(AndroidX.appcompat)
    implementation(AndroidX.constraint)
    implementation(AndroidX.navigationFragment)
    implementation(AndroidX.navigationUi)
    implementation(AndroidX.room)
    implementation(AndroidX.viewModel)
    implementation(AndroidX.liveData)
    implementation(AndroidX.fragmentKtx)
    implementation(AndroidX.securityCrypto)

    implementation(Network.retrofit)
    implementation(Network.gson)
    implementation(Network.okhttpLoggingInterceptor)

//    implementation(Google.gson)

    implementation(Image.glide)
    kapt(Image.glideCompiler)

//    testImplementation(Test.junit)
//    testImplementation(Test.coroutine)
//    testImplementation(Test.core)
//    testImplementation(Test.test_core)
//    testImplementation(Test.mockk)
//    testImplementation(Test.robolectric)
}